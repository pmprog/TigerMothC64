;angles
;	0, 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 38, 40, 42, 44, 46, 48, 50, 52, 54, 56, 58, 60,
;	62, 64, 66, 68, 70, 72, 74, 76, 78, 80, 82, 84, 86, 88, 90, 92, 94, 96, 98, 100, 102, 104, 106, 108, 110, 112, 114, 116,
;	118, 120, 122, 124, 126, 128, 130, 132, 134, 136, 138, 140, 142, 144, 146, 148, 150, 152, 154, 156, 158, 160, 162, 164,
;	166, 168, 170, 172, 174, 176, 178, 180, 182, 184, 186, 188, 190, 192, 194, 196, 198, 200, 202, 204, 206, 208, 210, 212,
;	214, 216, 218, 220, 222, 224, 226, 228, 230, 232, 234, 236, 238, 240, 242, 244, 246, 248, 250, 252, 254, 256, 258, 260,
;	262, 264, 266, 268, 270, 272, 274, 276, 278, 280, 282, 284, 286, 288, 290, 292, 294, 296, 298, 300, 302, 304, 306, 308,
;	310, 312, 314, 316, 318, 320, 322, 324, 326, 328, 330, 332, 334, 336, 338, 340, 342, 344, 346, 348, 350, 352, 354, 356, 358


;------------------------------------------------------------------[ Add Fraction to an 8.8 decimal
;------------------------------------------------------------------[ In  : .A.X = Integer/Fraction Value; .Y = Fraction to add
;------------------------------------------------------------------[ Out : .A.X = Integer/Fraction Value
maths_addfraction
	sta	math_af_i
	stx	math_af_x
	tya
	adc	math_af_x
	bcc	maths_addfrac_noinc
	inc	math_af_i
maths_addfrac_noinc
	tax
	lda	math_af_i
	rts
math_af_i	.byte	$00
math_af_x	.byte	$00

;------------------------------------------------------------------[ Sine(A)
;------------------------------------------------------------------[ In  : .A (Angle in range 0-179, 2deg units)
;------------------------------------------------------------------[ Out : .A = Integer Adjustment, .X = Fractional Value
maths_sine
	tax
	lda	sine_int, x
	pha
	lda	sine_frc, x
	tax
	pla
	rts

;------------------------------------------------------------------[ Cosine(A)
;------------------------------------------------------------------[ In  : .A (Angle in range 0-179, 2deg units)
;------------------------------------------------------------------[ Out : .A = Integer Adjustment, .X = Fractional Value
maths_cosine
	tax
	lda	cosine_int, x
	pha
	lda	cosine_frc, x
	tax
	pla
	rts


sine_int
	.byte	$00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
	.byte	$00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
	.byte	$00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
	.byte	$00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
	.byte	$00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
	.byte	$00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
	.byte	$00, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF
	.byte	$FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF
	.byte	$FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF
	.byte	$FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF
	.byte	$FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF
	.byte	$FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF


sine_frc
	.byte	$00, $09, $12, $1B, $23, $2C, $35, $3E, $46, $4F, $57, $60, $68, $70, $78
	.byte	$80, $87, $8F, $96, $9D, $A4, $AB, $B1, $B7, $BD, $C3, $C9, $CE, $D3, $D8
	.byte	$DD, $E1, $E5, $E9, $EC, $F0, $F3, $F5, $F7, $F9, $FB, $FC, $FE, $FE, $FF
	.byte	$FF, $FF, $FE, $FE, $FC, $FB, $F9, $F7, $F5, $F3, $F0, $EC, $E9, $E5, $E1
	.byte	$DD, $D8, $D3, $CE, $C9, $C3, $BD, $B7, $B1, $AB, $A4, $9D, $96, $8F, $87
	.byte	$80, $78, $70, $68, $60, $57, $4F, $46, $3E, $35, $2C, $23, $1B, $12, $09
	.byte	$00, $F7, $EE, $E5, $DD, $D4, $CB, $C2, $BA, $B1, $A9, $A0, $98, $90, $88
	.byte	$80, $79, $71, $6A, $63, $5C, $55, $4F, $49, $43, $3D, $37, $32, $2D, $28
	.byte	$23, $1F, $1B, $17, $14, $10, $0D, $0B, $09, $07, $05, $04, $02, $02, $01
	.byte	$00, $01, $02, $02, $04, $05, $07, $09, $0B, $0D, $10, $14, $17, $1B, $1F
	.byte	$23, $28, $2D, $32, $37, $3D, $43, $49, $4F, $55, $5C, $63, $6A, $71, $79
	.byte	$80, $88, $90, $98, $A0, $A9, $B1, $BA, $C2, $CB, $D4, $DD, $E5, $EE, $F7



cosine_int
	.byte	$00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
	.byte	$00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
	.byte	$00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
	.byte	$00, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF
	.byte	$FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF
	.byte	$FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF
	.byte	$FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF
	.byte	$FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF
	.byte	$FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF
	.byte	$00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
	.byte	$00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
	.byte	$00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00


cosine_frc
	.byte	$FF, $FF, $FE, $FE, $FC, $FB, $F9, $F7, $F5, $F3, $F0, $EC, $E9, $E5, $E1
	.byte	$DD, $D8, $D3, $CE, $C9, $C3, $BD, $B7, $B1, $AB, $A4, $9D, $96, $8F, $87
	.byte	$80, $78, $70, $68, $60, $57, $4F, $46, $3E, $35, $2C, $23, $1B, $12, $09
	.byte	$00, $F7, $EE, $E5, $DD, $D4, $CB, $C2, $BA, $B1, $A9, $A0, $98, $90, $88
	.byte	$80, $79, $71, $6A, $63, $5C, $55, $4F, $49, $43, $3D, $37, $32, $2D, $28
	.byte	$23, $1F, $1B, $17, $14, $10, $0D, $0B, $09, $07, $05, $04, $02, $02, $01
	.byte	$00, $01, $02, $02, $04, $05, $07, $09, $0B, $0D, $10, $14, $17, $1B, $1F
	.byte	$23, $28, $2D, $32, $37, $3D, $43, $49, $4F, $55, $5C, $63, $6A, $71, $79
	.byte	$80, $88, $90, $98, $A0, $A9, $B1, $BA, $C2, $CB, $D4, $DD, $E5, $EE, $F7
	.byte	$00, $09, $12, $1B, $23, $2C, $35, $3E, $46, $4F, $57, $60, $68, $70, $78
	.byte	$80, $87, $8F, $96, $9D, $A4, $AB, $B1, $B7, $BD, $C3, $C9, $CE, $D3, $D8
	.byte	$DD, $E1, $E5, $E9, $EC, $F0, $F3, $F5, $F7, $F9, $FB, $FC, $FE, $FE, $FF

